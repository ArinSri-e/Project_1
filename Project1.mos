model Project1
  uses "mmxprs"
  ! uses "mminsight" ! uncomment this line for an Xpress Insight model

declarations
  ! products= Brass Bronze Duralumin
  number_of_products=3
  products=1..number_of_products
  ! material = Cu Zn Tn Al
  number_of_material=4
  material=1..number_of_material


  !Name
  product_names:array(products) of string
  material_names:array(material) of string


  !Price= Price for each product
  price,limit_product:array(products) of real
  !Cost= Cost for each material
  cost,limit_material:array(material) of real
  
  
  !Constraints of proportions for materials in each products
  lower_bound:array(material,products) of real
  upper_bound:array(material,products) of real
  !Multiply composition to make the get rid of unwanted material
  composition:array(products,material) of real


  !varaible
  !sell= products' variable
  sell:array(products) of mpvar 
  !sub_buy= material' variable for each product
  sub_buy:array(material,products) of mpvar
  !buy=Total material variable
  buy:array(material) of mpvar


  !constraints of each material to find the shadow price
  cts_material:array(material)of linctr
end-declarations


initialisations from "smelt.dat"
    product_names material_names price cost lower_bound upper_bound composition limit_product limit_material
end-initialisations

!objective function
total_profit := sum(p in products) (price(p) * sell(p)) - sum(m in material) (cost(m) * buy(m))


!constraints for copper in each products
!lower limit
forall(m in material, p in products) do
  sub_buy(m,p) >= lower_bound(m,p)*sell(p)
end-do
!upper limit
forall(m in material, p in products) do
  sub_buy(m,p) <= upper_bound(m,p)*sell(p)
end-do


!Total material
forall(m in material) do
  buy(m)=sum(p in products)(sub_buy(m,p))
end-do

!constraints for material
forall(m in material) do
  cts_material(m) := buy(m) <= limit_material(m)
end-do

!forming material into products
forall(p in products) do
  sell(p) = 0.9 * sum(m in material)(composition(p,m)*sub_buy(m,p))
end-do

!constraint for products 
forall(p in products) sell(p)<=limit_product(p)


maximise(total_profit)

writeln 

!values of material in each products
 forall(m in material, p in products) do
   writeln(material_names(m), ' for is ', product_names(p), ' ',getsol(sub_buy(m,p)))
 end-do
writeln

!Total material
forall(m in material) do
  writeln('The company should buy ', material_names(m), ' for ', getsol(buy(m)), ' kg.')
end-do
writeln

!How much the products should be produced
forall(p in products) do
  writeln(product_names(p), ' should be produced ',getsol(sell(p)), ' kg.')
end-do
writeln

!maximum profit
writeln('the total maximum profit is ', getobjval,' GBP')
writeln

!shadow price
forall (m in material) do
    writeln('The shadow price for resource', material_names(m), ' is ', getdual(cts_material(m)))
end-do
writeln

 end-model